// wrote_241008.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

// 060_OperatorEx2
// 
class MyInt
{

};

int main()
{
	MyInt MyInValue = 0;
}
// 레퍼런스를 리턴한다? 분명한 메모리 영역이 존재하게 된다. 즉 LValue가 될 수 있다.
// ++NewInt 와 NewInt++ 를 비교해보자.
// 후자는 LValue가 될 수 없다. 전치와 후치는 다르다.
// 
// Result = NewInt++;
// ++연산 전의 값이 Result에 리턴된다.
// 후치의 모양은 다음과 같이 생겼다.
// int operator++(int _Value) {} //int 를 리턴한다. 
// (속력은 전치가 빠르지만...최적화에 별 의미 없으니 신경 ㄴㄴ)
// volatile, 컴파일어 임의대로 최적화 하는 것을 막는다.
// 
// 코드영역, 스택영역
// 


//061_Debug
// 디버그 모드는 최적화가 되지 않은 코드를 살펴보는 것.
// 릴리즈는 쓸데없는 코드를 삭제한다. 눈에 보이는 코드 그대로가 아니기에 중단점이 의미가 없다.
// 
// 릴리즈 해볼때는 작업하고 있는 파일이 아니라 새로 받아서 해봐야한다.
//  
// 포폴의 설정들은 남들에게 설명할 수 있어야 한다.


//062_
// x86 빌드하면 포인터가 4바이트. 그 정도만 기억하자.  




