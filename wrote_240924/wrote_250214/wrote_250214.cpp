// wrote_250214.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>


// GameMode
// 게임의 룰을 정하고 레벨의 시작을 담당한다.
// 이후에 만들어질 기본 클래스들을 지정한다.
//  
// 게임모드라는 기능은 네트워크를 기반으로 할 때 의미가 크다.
// 
// 언리얼의 서버 프레임워크는 서버베이스다.
// 네트워크를 기반으로 할 때 클라이언트는 게임모드를 개설할 수 없다.
// 게임모드는 서버만 가진다. 
// (단, 리슨서버가 아닌 데디케이트 서버라는 전제하의 이야기다.)
// 
// 게임모드, 플레이어 폰, 게임 스페이스, 플레이어 스테이트 등... 최소한 서버에 있어야 한다.
// 서버가 아닌 클라에서 한다면 클라만 알 수도 있다.

// 언리얼의 규칙
//
// 언리얼이 조사를 마친 클래스를 UClass라고 한다. 
// UCLASS()
// ...
// {
//	...GENERATED_BODY() 
// }
// 언리얼은 유저가 만든 코드를 조사하고 그것을 바탕으로 빌드될 코드를 따로 만든다.
// 코드의 주석도 삭제하면 언리얼이 인식하지 못하기 때문에 함부로 삭제하면 안 된다.
// GENERATED_BODY()가 super를 만들어준다.
// (Super...typedef AGameMode Super)
// 그리고 반드시 부모함수를 호출해야 한다.
// (Super::Tick(_DeltaTime), Super::BeginPlay())
// 
// 모든 레벨에서 작동하는 것들은 Actor를 상속받아야 한다.
// 그렇지 않으면 레벨에서 움직이지 않는다.
// 
//
// pawn이 만들어진 후 컨트롤러가 pawn에 연결된다. pawn은 그대로 있고 컨트롤러가 움직임을 조작한다.
// 게임 내에서 캐릭터 전환이 쉽게 끔 설계된 것이다.
// 캐릭터는 애니메이션이나 동작에 대한 기능만 가지고 컨트롤러에서 호출하는 방식으로 기능한다.
// 
// pawn은 네트워크 동기화 기능을 가진 클래스다.
// pawn을 상속받아야지 주인공 actor가 될 권한이 생긴다.
// 그 하위에 character 클래스는 애니메이션 기능을 담당한다.
// 
// pawn은 이동을 조작하기 위해 movement component를 무조건 가진다.
// movement component는 움직임을 조작함과 동시에 네트워크에 동기화 시킨다.
// 
// pawn과 다르게 character는 움직이지 못하고 중력의 영향을 받는다.
// 
// PlayerStart라는 actor가 게임 실행시 시작지점을 설정한다.
// 
// 생성자 이외의 곳에서 Component를 추가할 수 없다.
// CDO가 조사한 바와 다르면 에러가 발생한다.

// 블루 프린트
// 
// 비주얼 스튜디오에서 원하는 함수를 코드로 작성하고 블루프린트에서 실행시키고 싶다?
// 언리얼이 함수를 블루프린트에서 사용가능하게끔 인식하게 만들려면
// 언리얼 프로퍼티를 지정해줘야 한다. 그 프로퍼티가 UFunction이다.
// UFUNCTION(BlueprintCallable)
// void TestFunction();
// 프로퍼티를 붙인 후 호출 옵션(BlueprintCallable)을 붙여주면 된다.
// 
// UFUNCTION(BlueprintCallable, category)
// 프로퍼티들에 대해 알고 싶다면 검색해보자.
// 
// 코드로 변수를 만들고 블루프린트에서 편집하고 싶다면...
// UPROPERTY()
// int TestValue = 0;
// UPROPERTY()도 옵션이 있다. (UFunction보다 훨씬 많다.)
// 아래와 같은 지정자들을 통해 속성을 부여할 수 있다.
// 
// EditAnywhere, 에디터에서 값을 변경 가능하다.
// visibleAnywhere, 값을 바꿀 수 없다.
// BluePrintReadWrite, 블루 프린트에서 값을 변경할 수 있다.
// BluePrintReadOnly, 볼 수만 있다. 값을 바꿀 수 없다.
// 
// 메타데이터 지정자 = 일반 지정자 이외에 몇가지 사소한 옵션을 지정한다.
//
