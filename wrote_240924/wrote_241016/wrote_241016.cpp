// wrote_241016.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}

// capacity가 0이면 안되니까 +1 해줌(UVector.h)

//076_DeepCopy
// 
// 얕은 복사(Shallow Copy)의 문제점
// Dangling Ptr가 발생하기 쉽다. 그리고 main에 dangling ptr가 존재한다면
// 삭제되면서 존재하지 않는 영역을 제거하려다가 터진다.
// 
// 
//

// 
// 블록이 바닥에 쌓이고 다시 올라가게 만들기
// 
// 쌓인다
// 5번째 줄로 이동 -5번째 줄 밖으로 이동 불가- PrevImage에 player 위치 반영 - Player 시작점에 위치
// 

//액터를 상속받는 새로운 클래스 만들기
//그 안에서 렌더러 만들기
//이미지의 크기를 화면 크기만큼 만들기
//그 액터를 스폰하기

//이미지는 이차원 배열의 데이터로 보아라.
//백버퍼에 이미지를 쌓겠다는 생각을 하면 안 된다. 백버퍼는 로직을 생각할 부분이 아니다.
//렌더타겟...마음대로 그리고 지울 수 있는 곳
//

//snake
// 
// list의 자료구조와 완전히 동일하다.
// 어떠한 클래스가 자신의 내부에 자신과 동일한 
// 
// 
// 
// 
// 순수가상함수는 객체화 불가능
// 재귀, 특정 함수 안에서 자신을 다시 한번 호출하는 함수 (this를 통해서)
 
// 
//
//