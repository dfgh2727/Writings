// wrote_250321.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>


// 패키징
// 
// 최종적으로 게임을 출시하고 배포하기 위한 과정이다.
// 에디터 상단에 플랫폼 - Windows - 프로젝트 패키지를 누르면 패키징이 된다.
// 프로젝트의 Build 파일에 들어가서 패키징을 실행하자.
// Shipping 옵션이 최종 출시 버전이다.
// DebugGame과 Developmet는 개발용이다.
// 
// 첫 패키징은 매우 느려서 30분 이상 걸릴 수 있다. 
// (...밥 먹으러 가기 전에 하자)
// 패키징은 프로젝트 진행 중간에 한번씩 해보자.
// 어떤 문제가 발생하는 지 확인해야 한다.
// 
// 레벨을 여러개 사용할 시 패키징이 안 될 수 있다.
// 패키징 시 어떤 레벨을 포함시킬지 정해야 한다.
// (테스트 레벨은 포함시킬 필요가 없으니까.)
// 단, 기본맵은 반드시 패키징에 포함된다.
//
// 패키징을 실행하면 cpu가 100%로 돌아가는 상태가 되므로 별도의 작업을 할 수 없다. 
// 다른 pc에서 Jenkins와 같은 프로그램을 통해 빌드를 할 수 있다.
// 직접 해 보는 것을 추천한다. (회사 지원시 Jenkins 프로그램 사용 여부를 기재할 수 있다.)
// 
// 패키징 시 출력로그의 경고를 확인하여 에러 사항을 보자.
// 당장 패키징이 되더라도 최후에 에러사항으로 인해 패키징이 안 될 수도 있다.
// 최대한 에러사항을 읽고 해결하자.
// (초기화를 반드시 하자! 에러의 주요 원인 중 하나다.)
// 
// 
// 패키징 후 오픈레벨이 실패할 시
// 패키징에 레벨이 포함되지 못한 것으로 셋팅에 레벨을 포함시켜야 한다.
// 프로젝트 세팅 - 패키징 - (고급)- 패키지 된 빌드에 포함시킬 맵 목록을 눌러서
// 레벨을 포함시키자.


// 네비메쉬(Nav Mesh)
// 
// 삼각형으로 지면을 만든 뒤 움직일 수 있는 영역과 움직일 수 없는 영역을 설정한다.
// 언리얼에서 볼륨 - 네비메쉬 바운드 볼륨을 선택 후 영역을 설정하자.
// 
// 디테일 - 내비게이션 - 내비게이션에 영향 주기 가능을 체크하면 
// 오브젝트가 레벨에서 네비메쉬에 영향을 줄 수 있다.
// 물리를 가진 오브젝트는 최초의 값만 계산되기 때문에 적용하지 않는 것이 좋다.
// 
// 프로젝트 세팅 - 내비게이션 메시에서 네비메쉬가 설치되는 옵션을 설정할 수 있다.
// 그 중 내비게이션 해상도 파라미터 - 에이전트 최대 기울기로 각도를 조절하여
// 경사진 지형에도 메쉬를 설정할 수 있다.
// 
// 볼륨 - 내비 모디파이어 볼륨을 통해 원하는 영역의 내비메쉬를 삭제할 수 있다.
//


class Parent
{
public:
	void Func()
	{
		std::cout << "부모 함수 호출" << std::endl;
	}

	int Num = 0;
};

class Child : public Parent
{
public:
	void Func()
	{
		std::cout << "자식 함수 호출" << std::endl;
	}

	int Num = 1;
};

void main()
{
	Parent TempParent;
	Child TempChild;

	//Parent* ParentPtr = &TempChild;
	Parent* Ptr = &TempChild;
	
	//Child* ChildPtr = &TempParent; 불가능

	Ptr->Func();	

}