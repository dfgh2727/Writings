// wrote_250305.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>


// 애니메이션
// 
// 애니메이션 블루프린트를 만들고 우측 상단을 확인하면 
// 애님 인스턴스를 상속받고 있음을 알 수 있다.
// 
// 캐릭터 블루프린트에서 디테일 - 애니메이션, 메쉬를 확인할 수 있다.
// 
// 하나의 캐릭터에서 메쉬를 바꿔보자.
// Set Skeletal Mesh Asset으로 메쉬를 교체할 수 있다.
// 
// 애니메이션(시퀀스)을 기반으로 애님 몽타주를 생성하자.
// 단 애님 몽타주를 사용하기로 했으면 캐릭터 블루프린트에서 애니메이션을 사용할 수 없다.
// 몽타주에서 당장 애님 그래프는 따로 필요 없다.
// 
// 애니메이션은 각 본(bone)들에 대한 행렬이다.
// 애니메이션은 각자 재생되지만 애니메이션을 선택하거나 동시에 재생시키고 비율을 정하여 
// 최종적으로 어떤 동작이 보일지 정하는 것이 블렌드다.
// 즉, 블렌드는 행렬의 연산 결과라고 할 수 있다. 참고로 애니메이션 블렌드의 총 합(= 가중치)은 1이다.
// 
// 애님 몽타주 - 애님 그래프에서 블렌드가 아닌 default slot을 사용해서 애니메이션을 지정하면
// 애니메이션이 한번 실행되고 기본 자세로 돌아온다.
// 사실 기본 자세도 실행되고 있는 애니메이션일 뿐이다.
// 근데 경고가 뜬다.
// 
// 몽타주에서 GetOwningComponent로 target을 자신으로 하고
// 그래프에서 DefaultSlot에 skeletal을 연결하면 경고가 사라진다. (ppt 참고)
// 섞인 최종 자세를 메쉬가 기억하고 있다.
// (굳이 이렇게 설정해야 하는 명확한 이유는 선생님은 모른다. 한번 확인해보자.)
// 
// 몽타주를 사용한다는 것은 애니메이션을 직접 제어하겠다는 의미다.
// 시퀀스의 경우 언리얼이 자동으로 처리해준다.
// 
// 디폴트 슬롯에서 재생될 수 있는 애니메이션은 하나뿐이다.
// 몽타주와 몽타주를 섞을 수 있을까? 아니다.
// 몽타주는 하나의 Default Slot을 사용한다. Default Slot을 섞을 순 없으니 불가능하다.
// 
// 몽타주 우측 하단에 애님 슬롯 매니저에서 슬롯을 추가할 수 있다.
// 그리고 몽타주가 어느 슬롯에서 재생될 지 설정할 수 있다.
// (슬롯과 슬롯의 관계는 다음에 배우자.)
// 
// 몽타주를 재생시켰는데 루프되지 않는다?
// 블루프린트나 C++로 직접 반복재생을 설정하거나 (번거롭다.)
// 몽타주 섹션을 이용해서 설정할 수 있다.
// 
// class 어쩌구 : public IAnimInstance
// TMAP< , >
// C++로 TMAP을 통해 애니메이션을 관리하면서 애님 몽타주를 사용하면 편리하다.
// 애니메이션을 중복해서 추가하거나 없는 것을 넣을 수도 없다.
// (TMap은 언리얼에서 사용하는 일종의 unordered map)

// 몽타주 사용할 시 주의할 점
// Play Montage는 완전히 블루프린트로 만들어져 있다.
// 
// 
// 노티파이
// 애니메이션 중 특정 시점에서 무언가를 할 수 있다.
// 시퀀스, 몽타주 모두 사용 가능하다.
// .
// .
// .
// 노티파이 중 사운드 추가가 가능하다. 언리얼이 제공하는 기본 기능이다.
// 이걸 이용해서 코드를 참고하여 노티파이에 추가할 기능을 만들어보자.
// DEPRECATED = 사용하지 않음
// 
// 
